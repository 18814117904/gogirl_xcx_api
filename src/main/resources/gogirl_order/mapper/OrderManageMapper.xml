<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gogirl.gogirl_order.order_manage.dao.OrderManageMapper">

    <resultMap id="orderDetail" type="com.gogirl.gogirl_order.order_commons.dto.OrderManage">
        <result column="id" property="id" />
        <result column="order_no" property="orderNo"/>
        <result column="order_user" property="orderUser"/>
        <result column="telephone" property="telephone"/>
        <result column="store_schedule_username" property="storeScheduleUsername"/>
        <result column="department_id" property="departmentId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="launch_time" property="launchTime"/>
        <result column="finish_time" property="finishTime"/>
        <result column="total_price" property="totalPrice"/>
        <result column="scheduled_id" property="scheduledId"/>
        <result column="change_price" property="changePrice"/>
        <result column="discount_price" property="discountPrice"/>
        <result column="status" property="status"/>
        <result column="message" property="message"/>
        <result column="remark" property="remark"/>
        <result column="create_user" property="createUser"/>
        <result column="payment_type" property="paymentType"/>
        <result column="multiple_payment_type" property="multiplePaymentType"/>
        <result column="order_type" property="orderType"/>
        <result column="department_name" property="departmentName"/>
        <result column="coupon_relevance_id" property="couponRelevanceId"/>
        <result column="data_integrity" property="dataIntegrity"/>
        <result column="scheduled_time" property="scheduledTime"/>
        <result column="arrive_time" property="arriveTime"/>
        <result column="coupon_relevance_price" property="couponRelevancePrice"/>
        <association property="customer" javaType="com.gogirl.gogirl_user.entity.Customer">
            <result column="cus_openid" property="openid"/>
            <result column="cus_openid1" property="openid1"/>
            <result column="cus_id" property="id"/>
            <result column="cus_phone" property="phone"/>
            <result column="cus_nickname" property="nickname"/>
            <result column="cus_real_name" property="realName"/>
            <result column="cus_store_record_real_name" property="storeRecordRealName"/>
            <result column="cus_customer_source" property="customerSource"/>
        </association>
        <association property="userManage" javaType="com.gogirl.gogirl_order.order_commons.dto.UserManage">
            <result column="us_id" property="id"/>
            <result column="us_name" property="name"/>
            <result column="us_no" property="no"/>
            <result column="us_department_id" property="departmentId"/>
            <result column="us_jobs" property="jobs"/>
            <result column="us_create_time" property="createTime"/>
            <result column="us_mobile" property="mobile"/>
        </association>
        <collection property="listOrderServer" ofType="com.gogirl.gogirl_order.order_commons.dto.OrderServe" column="id"
          select="listOrderServerByOrderId">
        </collection>
        <collection property="listCouponOrderRelevance" ofType="com.gogirl.gogirl_user.entity.CouponOrderRelevance" column="id"
          select="listCouponOrderRelevanceByOrderId">
        </collection>
        <collection property="listTimesCardRecord" ofType="com.gogirl.gogirl_user.entity.TimesCardUsedRecord" column="id"
          select="listTimesCardRecordByOrderId">
        </collection>
    </resultMap>

    <resultMap id="OrderServeResultMap" type="com.gogirl.gogirl_order.order_commons.dto.OrderServe">
        <result column="orser_id" property="id"/>
        <result column="orser_order_id" property="orderId"/>
        <result column="orser_serve_id" property="serveId"/>
        <result column="orser_produce_id" property="produceId"/>
        <result column="orser_create_time" property="createTime"/>
        <result column="orser_scheduled_time" property="scheduledTime"/>
        <result column="orser_produce_name" property="produceName"/>
        <result column="orser_serve_type" property="serveType"/>
        <result column="orser_technician_id" property="technicianId"/>
        <result column="orser_serve_name" property="serveName"/>
        <result column="orser_serve_number" property="serveNumber"/>
        <result column="orser_serve_price" property="servePrice"/>
        <result column="orser_serve_change_price" property="serveChangePrice"/>
        <result column="orser_end_time" property="endTime"/>
        <result column="orser_start_date" property="startDate"/>
        <result column="orser_start_time" property="startTime"/>
        <result column="orser_execution_status" property="executionStatus"/>
        <result column="orser_comment_score" property="commentScore"/>
        <association property="produce" javaType="com.gogirl.gogirl_service.entity.Produce">
	        <result column="produce_id" property="id"/>
	        <result column="produce_name" property="name"/>
	        <result column="produce_picture_path" property="picturePath"/>
	        <result column="produce_type" property="type"/>
	        <result column="produce_label" property="label"/>
	        <result column="produce_shop_sort" property="shopSort"/>
	        <result column="reqduce_grade" property="reqGrade"/>
	        <result column="produce_status" property="status"/>
	        <result column="produce_remark" property="remark"/>
	        <result column="produce_praise_sum" property="praiseSum"/>
	        <result column="produce_current_price" property="currentPrice"/>
	        <result column="produce_bargain_price" property="bargainPrice"/>
	        <result column="produce_service_duration" property="serviceDuration"/>
	        <result column="produce_brief_introduction" property="briefIntroduction"/>
	        <result column="produce_details" property="details"/>
	        <result column="produce_sub_title" property="subTitle"/>
        	<collection property="listProduceSku" ofType="com.gogirl.gogirl_order.entity.BaseProduceSku">
			    <result column="prosku_id" property="id" jdbcType="INTEGER" />
			    <result column="prosku_purchase_sku_id" property="purchaseSkuId" jdbcType="INTEGER" />
			    <result column="prosku_produce_id" property="produceId" jdbcType="INTEGER" />
			    <result column="prosku_type" property="type" jdbcType="INTEGER" />
	        </collection>
        </association>
        <association property="serve" javaType="com.gogirl.gogirl_service.entity.Serve">
            <result column="ser_id" property="id" />
            <result column="ser_name" property="name"/>
            <result column="ser_type" property="type"/>
            <result column="ser_label" property="label"/>
            <result column="ser_shop_sort" property="shopSort"/>
            <result column="ser_price" property="price"/>
            <result column="ser_picture_path" property="picturePath"/>
            <result column="ser_status" property="status"/>
            <result column="ser_remark" property="remark"/>
            <result column="ser_details" property="details"/>
            <result column="ser_service_duration" property="serviceDuration"/>
        </association>
        <collection property="listOrderServeSku" ofType="com.gogirl.gogirl_order.entity.OrderServeSku">
		    <result column="ossku_id" property="id" jdbcType="INTEGER" />
		    <result column="ossku_order_serve_id" property="orderServeId" jdbcType="INTEGER" />
		    <result column="ossku_sku_id" property="skuId" jdbcType="INTEGER" />
		    <result column="ossku_type" property="type" jdbcType="INTEGER" />
		    <result column="ossku_count" property="count" jdbcType="DECIMAL" />
        	<association property="purchaseSku" javaType="com.gogirl.gogirl_order.entity.PurchaseSku">
			    <result column="pursku_id" property="id" jdbcType="INTEGER" />
			    <result column="pursku_sku" property="sku" jdbcType="VARCHAR" />
			    <result column="pursku_picture_path" property="picturePath" jdbcType="VARCHAR" />
			    <result column="pursku_sku_name" property="skuName" jdbcType="VARCHAR" />
			    <result column="pursku_sku_type" property="skuType" jdbcType="INTEGER" />
			    <result column="pursku_sku_model" property="skuModel" jdbcType="VARCHAR" />
			    <result column="pursku_shop_price" property="shopPrice" jdbcType="DOUBLE" />
			    <result column="pursku_purchase_price" property="purchasePrice" jdbcType="DOUBLE" />
			    <result column="pursku_supplier" property="supplier" jdbcType="VARCHAR" />
			    <result column="pursku_use_type" property="useType" jdbcType="INTEGER" />
			    <result column="pursku_series_id" property="seriesId" jdbcType="INTEGER" />
			    <result column="pursku_pps_parent_id" property="ppsParentId" jdbcType="INTEGER" />
			    <result column="pursku_pps_sku" property="ppsSku" jdbcType="VARCHAR" />
			    <result column="pursku_pps_multiattribute" property="ppsMultiattribute" jdbcType="BIT" />
			    <result column="pursku_pps_category_id" property="ppsCategoryId" jdbcType="INTEGER" />
			    <result column="pursku_pps_category_name" property="ppsCategoryName" jdbcType="VARCHAR" />
			    <result column="pursku_pps_shopping_mall_category_id" property="ppsShoppingMallCategoryId" jdbcType="INTEGER" />
			    <result column="pursku_pps_shopping_mall_category_name" property="ppsShoppingMallCategoryName" jdbcType="VARCHAR" />
			    <result column="pursku_pps_goods_title" property="ppsGoodsTitle" jdbcType="VARCHAR" />
			    <result column="pursku_pps_description" property="ppsDescription" jdbcType="VARCHAR" />
			    <result column="pursku_pps_original_price" property="ppsOriginalPrice" jdbcType="DECIMAL" />
			    <result column="pursku_pps_member_price" property="ppsMemberPrice" jdbcType="DECIMAL" />
			    <result column="pursku_pps_discount_price" property="ppsDiscountPrice" jdbcType="DECIMAL" />
			    <result column="pursku_pps_picture_path" property="ppsPicturePath" jdbcType="VARCHAR" />
			    <result column="pursku_pps_vedio_path" property="ppsVedioPath" jdbcType="VARCHAR" />
			    <result column="pursku_pps_brand" property="ppsBrand" jdbcType="VARCHAR" />
			    <result column="pursku_pps_color_number" property="ppsColorNumber" jdbcType="VARCHAR" />
			    <result column="pursku_pps_color_name" property="ppsColorName" jdbcType="VARCHAR" />
			    <result column="pursku_pps_specs" property="ppsSpecs" jdbcType="VARCHAR" />
			    <result column="pursku_pps_size" property="ppsSize" jdbcType="VARCHAR" />
			    <result column="pursku_pps_weight" property="ppsWeight" jdbcType="DOUBLE" />
			    <result column="pursku_pps_unit" property="ppsUnit" jdbcType="VARCHAR" />
			    <result column="pursku_pps_logistics_description" property="ppsLogisticsDescription" jdbcType="VARCHAR" />
			    <result column="pursku_pps_guarantee_instruction" property="ppsGuaranteeInstruction" jdbcType="VARCHAR" />
			    <result column="pursku_pps_after_sale_instructions" property="ppsAfterSaleInstructions" jdbcType="VARCHAR" />
			    <result column="pursku_source" property="source" jdbcType="INTEGER" />
			    <result column="pursku_color_value" property="colorValue" jdbcType="VARCHAR" />
			    <result column="pursku_color_name" property="colorName" jdbcType="VARCHAR" />
			    <result column="pursku_color_img_path" property="colorImgPath" jdbcType="VARCHAR" />
        	</association>
        </collection>
        <collection property="listTechnicianManage" ofType="com.gogirl.gogirl_technician.technician_commons.dto.TechnicianManage">
            <result column="tech_id" property="id"/>
            <result column="tech_technician_no" property="technicianNo"/>
            <result column="tech_name" property="name"/>
        </collection>
        <collection property="orderRecord" ofType="com.gogirl.gogirl_order.order_commons.dto.OrderRecord">
            <result column="orre_id" property="id"/>
            <result column="orre_order_serve_id" property="orderServeId"/>
            <result column="orre_fix_hour" property="fixHour"/>

            <result column="orre_is_time_out" property="isTimeOut"/>
            <result column="orre_link_cause" property="linkCause"/>
            <result column="orre_user_feedback" property="userFeedback"/>

            <result column="orre_technician_feedback" property="technicianFeedback"/>
            <result column="orre_picture_path" property="picturePath"/>
            <result column="orre_existing_problems" property="existingProblems"/>

            <result column="orre_solution" property="solution"/>
            <result column="orre_is_guest_photo" property="isGuestPhoto"/>
            <result column="orre_after_sale_feedback" property="afterSaleFeedback"/>
        </collection>
    </resultMap>
    
    <resultMap id="CouponOrderRelevanceResultMap" type="com.gogirl.gogirl_user.entity.CouponOrderRelevance">
	    <id column="corid" property="id" jdbcType="INTEGER" />
	    <result column="corcoupon_id" property="couponId" jdbcType="INTEGER" />
	    <result column="corcustomer_id" property="customerId" jdbcType="INTEGER" />
	    <result column="corcoupon_customer_relevance_id" property="couponCustomerRelevanceId" jdbcType="INTEGER" />
	    <result column="corstatus" property="status" jdbcType="INTEGER" />
	    <result column="corcreate_time" property="createTime" jdbcType="TIMESTAMP" />
	    <result column="corconfirm_time" property="confirmTime" jdbcType="TIMESTAMP" />
	    <result column="cortechnician_id" property="technicainId" jdbcType="INTEGER" />
	    <result column="cororder_id" property="orderId" jdbcType="INTEGER" />
	    <result column="cororder_serve_id" property="orderServeId" jdbcType="INTEGER" />
	    <result column="cormessage" property="message" jdbcType="VARCHAR" />
		<association property="coupon" javaType="com.gogirl.gogirl_user.entity.Coupon">
		    <id column="couid" jdbcType="INTEGER" property="id" />
		    <result column="couname" jdbcType="VARCHAR" property="name" />
		    <result column="coudiscount_amount" jdbcType="DOUBLE" property="discountAmount" />
		    <result column="coureaching_amount" jdbcType="DOUBLE" property="reachingAmount" />
		    <result column="coudiscount_percent" jdbcType="DOUBLE" property="discountPercent" />
		    <result column="coutype" jdbcType="INTEGER" property="type" />
		    <result column="coucondition1" jdbcType="VARCHAR" property="condition1" />
		    <result column="counote" jdbcType="VARCHAR" property="note" />
		    <result column="couvalid_type" jdbcType="INTEGER" property="validType" />
		    <result column="couvalid_date" jdbcType="INTEGER" property="validDate" />
		    <result column="couvalid_start_time" jdbcType="TIMESTAMP" property="validStartTime" />
		    <result column="couvalid_end_time" jdbcType="TIMESTAMP" property="validEndTime" />
		    <result column="couall_quantity" jdbcType="INTEGER" property="allQuantity" />
		    <result column="coureceive_quantity" jdbcType="INTEGER" property="receiveQuantity" />
		    <result column="couuse_quantity" jdbcType="INTEGER" property="useQuantity" />
		    <result column="coulimit_quantity" jdbcType="INTEGER" property="limitQuantity" />
		    <result column="coustate" jdbcType="INTEGER" property="state" />
		    <result column="cousource_type" jdbcType="INTEGER" property="sourceType" />
		    <result column="couupdate_time" jdbcType="TIMESTAMP" property="updateTime" />
		    <result column="couremark" jdbcType="VARCHAR" property="remark" />
		    <result column="cou_pay_source" jdbcType="VARCHAR" property="paySource" />
		    <result column="cou_pay_amount" jdbcType="VARCHAR" property="payAmount" />
	    </association>
    </resultMap>

  <resultMap id="TimesCardRecordMap" type="com.gogirl.gogirl_user.entity.TimesCardUsedRecord" >
    <id column="tcur_id" property="id" jdbcType="INTEGER" />
    <result column="tcur_card_type_id" property="cardTypeId" jdbcType="INTEGER" />
    <result column="tcur_customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="tcur_card_relevance_customer_id" property="cardRelevanceCustomerId" jdbcType="INTEGER" />
    <result column="tcur_time" property="time" jdbcType="TIMESTAMP" />
    <result column="tcur_type" property="type" jdbcType="INTEGER" />
    <result column="tcur_order_id" property="orderId" jdbcType="INTEGER" />
    <result column="tcur_order_serve_id" property="orderServeId" jdbcType="INTEGER" />
    <result column="tcur_serve_id" property="serveId" jdbcType="INTEGER" />
    <result column="tcur_technician_id" property="technicianId" jdbcType="INTEGER" />
    <result column="tcur_department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="tcur_status" property="status" jdbcType="INTEGER" />
  	<association property="timesCardCustomerRelevance" javaType="com.gogirl.gogirl_user.entity.TimesCardCustomerRelevance" >
    <id column="tccr_id" property="id" jdbcType="INTEGER" />
    <result column="tccr_card_type_id" property="cardTypeId" jdbcType="INTEGER" />
    <result column="tccr_customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="tccr_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="tccr_used_times" property="usedTimes" jdbcType="INTEGER" />
    <result column="tccr_valid_start_time" property="validStartTime" jdbcType="TIMESTAMP" />
    <result column="tccr_valid_end_time" property="validEndTime" jdbcType="TIMESTAMP" />
    <result column="tccr_referee_id" property="refereeId" jdbcType="VARCHAR" />
    <result column="tccr_status" property="status" jdbcType="VARCHAR" />
	</association>
	<association property="timesCardType" javaType="com.gogirl.gogirl_user.entity.TimesCardType">
    <id column="tct_id" property="id" jdbcType="INTEGER" />
    <result column="tct_name" property="name" jdbcType="VARCHAR" />
    <result column="tct_sum_times" property="sumTimes" jdbcType="INTEGER" />
    <result column="tct_discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="tct_pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="tct_valid_days" property="validDays" jdbcType="INTEGER" />
    <result column="tct_notes" property="notes" jdbcType="VARCHAR" />
    <result column="tct_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="tct_status" property="status" jdbcType="INTEGER" />
    </association>
  </resultMap>
    
    <sql id="baseSql">
        om .id, om.order_no, om.order_user, om.telephone, om.store_schedule_username, om.department_id, om.create_time, om.update_time, om.launch_time, om.finish_time, (om.total_price + om.change_price) as total_price, om.change_price, om.discount_price, om.status, om.remark, om.message, om.create_user, om.payment_type, om.multiple_payment_type, om.order_type, om.coupon_relevance_id, om.data_integrity
    </sql>

    <sql id="orderSql">
        ord.id, ord.order_no, ord.scheduled_id, ord.order_user, ord.telephone,ord.arrive_time, ord.store_schedule_username, ord.department_id, ord.create_time, ord.update_time, ord.launch_time, ord.finish_time, (ord.total_price + ord.change_price) as total_price, ord.change_price, ord.discount_price, ord.status, ord.remark, ord.message, ord.create_user, ord.payment_type, ord.multiple_payment_type, ord.order_type, ord.coupon_relevance_id, ord.data_integrity
    </sql>
    <sql id="orderRecordSql">
        orre.id orre_id, orre.order_serve_id orre_order_serve_id, orre.fix_hour orre_fix_hour, orre.is_time_out orre_is_time_out, orre.link_cause orre_link_cause, orre.user_feedback orre_user_feedback, orre.technician_feedback orre_technician_feedback, orre.picture_path orre_picture_path, orre.existing_problems orre_existing_problems, orre.solution orre_solution, orre.is_guest_photo orre_is_guest_photo, orre.after_sale_feedback orre_after_sale_feedback
    </sql>
    <sql id="customerSql">
        cus.id cus_id,cus.openid cus_openid,cus.openid1 cus_openid1, cus.phone cus_phone, cus.nickname cus_nickname, cus.real_name cus_real_name, cus.store_record_real_name cus_store_record_real_name,cus.customer_source cus_customer_source
    </sql>
    <sql id="userManageSql">
        us.id us_id, us.name us_name, us.no us_no, us.department_id us_department_id, us.jobs us_jobs, us.create_time us_create_time, us.mobile us_mobile
    </sql>
  <sql id="orderServeSkuSql" >
   ossku.id ossku_id,ossku.order_serve_id ossku_order_serve_id,ossku.sku_id ossku_sku_id,ossku.type ossku_type,ossku.count ossku_count
  </sql>

    <sql id="orderServeSql">
        orser.id orser_id, orser.order_id orser_order_id, orser.serve_id orser_serve_id, orser.technician_id orser_technician_id, orser.serve_id orser_serve_id, orser.produce_name orser_produce_name, orser.serve_type orser_serve_type, orser.serve_name orser_serve_name, orser.serve_price orser_serve_price, orser.serve_change_price orser_serve_change_price, orser.serve_number orser_serve_number, orser.create_time orser_create_time, orser.scheduled_time orser_scheduled_time, orser.start_time orser_start_date, orser.start_time orser_start_time, orser.end_time orser_end_time, orser.execution_status orser_execution_status,orser.comment_score orser_comment_score
    </sql>

    <sql id="serveSql">
        ser.id ser_id, ser.name ser_name,ser.type ser_type, ser.label ser_label, ser.shop_sort ser_shop_sort, ser.price ser_price, ser.picture_path ser_picture_path, ser.status ser_status, ser.remark ser_remark, ser.details ser_details, ser.service_duration ser_service_duration
    </sql>
    <sql id="produceSql">
        produce.id produce_id, produce.name produce_name, produce.picture_path produce_picture_path, produce.type produce_type, produce.label produce_label,
        produce.shop_sort produce_shop_sort,produce.req_grade, produce.status produce_status, produce.remark produce_remark,produce.praise_sum produce_praise_sum,
        produce.current_price produce_current_price,produce.bargain_price produce_bargain_price,produce.service_duration produce_service_duration,
        produce.brief_introduction produce_brief_introduction,produce.details produce_details,produce.sub_title produce_sub_title
    </sql>
    <sql id="proskuSql">
        prosku.id prosku_id,prosku.purchase_sku_id prosku_purchase_sku_id,prosku.produce_id prosku_produce_id,prosku.type prosku_type
    </sql>
    <sql id="technicianSql">
        tech.id tech_id, tech.technician_no tech_technician_no, tech.name tech_name
    </sql>
  <sql id="couponOrderRelevanceSql" >
    cor.id corid,cor.coupon_id corcoupon_id,cor.customer_id corcustomer_id,cor.coupon_customer_relevance_id corcoupon_customer_relevance_id,cor.status corstatus,cor.message cormessage,cor.create_time corcreate_time,cor.confirm_time corconfirm_time, 
    cor.technician_id cortechnician_id,cor.order_id cororder_id,cor.order_serve_id cororder_serve_id 
  </sql>
  <sql id="couponSql" >
    cou.id couid,cou.name couname,cou.discount_amount coudiscount_amount,cou.reaching_amount coureaching_amount,cou.discount_percent coudiscount_percent,cou.type coutype,cou.condition1 coucondition1,cou.note counote,cou.valid_type couvalid_type, 
   cou.valid_date couvalid_date,cou.valid_start_time couvalid_start_time,cou.valid_end_time couvalid_end_time,cou.all_quantity couall_quantity,cou.receive_quantity coureceive_quantity,cou.use_quantity couuse_quantity, 
   cou.limit_quantity coulimit_quantity,cou.state coustate,cou.source_type cousource_type,cou.update_time couupdate_time, cou.remark couremark,cou.pay_source cou_pay_source,cou.pay_amount cou_pay_amount
  </sql>
    
  <sql id="TimesCardTypeSql" >
    tct.id tct_id, tct.name tct_name, tct.sum_times tct_sum_times, tct.discount_amount tct_discount_amount, tct.pay_amount tct_pay_amount, tct.valid_days tct_valid_days, tct.notes tct_notes, tct.create_time tct_create_time,tct.status tct_status
  </sql>
  <sql id="timesCardUsedRecordSql" >
    tcur.id tcur_id,tcur.card_type_id tcur_card_type_id,tcur.customer_id tcur_customer_id,tcur.card_relevance_customer_id tcur_card_relevance_customer_id,tcur.time tcur_time,tcur.type tcur_type,tcur.order_id tcur_order_id,tcur.order_serve_id tcur_order_serve_id, 
    tcur.serve_id tcur_serve_id,tcur.technician_id tcur_technician_id,tcur.department_id tcur_department_id,tcur.status tcur_status
  </sql>
  <sql id="timesCardCustomerRelevanceSql" >
    tccr.id tccr_id,tccr.card_type_id tccr_card_type_id,tccr.customer_id tccr_customer_id,tccr.create_time tccr_create_time,tccr.used_times tccr_used_times,tccr.valid_start_time tccr_valid_start_time,tccr.valid_end_time tccr_valid_end_time,tccr.referee_id tccr_referee_id,tccr.status tccr_status
  </sql>
    
  <sql id="purskuSql" >
   pursku.id pursku_id,pursku.sku pursku_sku,pursku.picture_path pursku_picture_path,pursku.sku_name pursku_sku_name,pursku.sku_type pursku_sku_type,pursku.sku_model pursku_sku_model,pursku.shop_price pursku_shop_price,pursku.purchase_price pursku_purchase_price, 
   pursku.supplier pursku_supplier,pursku.use_type pursku_use_type,pursku.series_id pursku_series_id,pursku.pps_parent_id pursku_pps_parent_id,pursku.pps_sku pursku_pps_sku,pursku.pps_multiattribute pursku_pps_multiattribute,pursku.pps_category_id pursku_pps_category_id, 
   pursku.pps_category_name pursku_pps_category_name,pursku.pps_shopping_mall_category_id pursku_pps_shopping_mall_category_id,pursku.pps_shopping_mall_category_name pursku_pps_shopping_mall_category_name, 
   pursku.pps_goods_title pursku_pps_goods_title,pursku.pps_description pursku_pps_description,pursku.pps_original_price pursku_pps_original_price,pursku.pps_member_price pursku_pps_member_price,pursku.pps_discount_price pursku_pps_discount_price, 
   pursku.pps_picture_path pursku_pps_picture_path,pursku.pps_vedio_path pursku_pps_vedio_path,pursku.pps_brand pursku_pps_brand,pursku.pps_color_number pursku_pps_color_number,pursku.pps_color_name pursku_pps_color_name,pursku.pps_specs pursku_pps_specs, 
   pursku.pps_size pursku_pps_size,pursku.pps_weight pursku_pps_weight,pursku.pps_unit pursku_pps_unit,pursku.pps_logistics_description pursku_pps_logistics_description,pursku.pps_guarantee_instruction pursku_pps_guarantee_instruction, 
   pursku.pps_after_sale_instructions pursku_pps_after_sale_instructions,pursku.source pursku_source,pursku.color_value pursku_color_value,pursku.color_name pursku_color_name,pursku.color_img_path pursku_color_img_path
  </sql>
    
    <select id="listOrderServerByOrderId" resultMap="OrderServeResultMap">
        select
        <include refid="orderServeSql"/>,
        <include refid="orderServeSkuSql"/>,
        <include refid="serveSql"/>,
        <include refid="produceSql"/>,
        <include refid="technicianSql"/>,
        <include refid="orderRecordSql"/>,
        <include refid="proskuSql"/>,
        <include refid="purskuSql"/>
        from order_serve orser
        left join order_serve_sku ossku on ossku.order_serve_id = orser.id
        left join base_serve ser on orser.serve_id = ser.id
        left join base_produce produce on orser.produce_id = produce.id
        left join base_produce_sku prosku on prosku.produce_id = produce.id
        left join purchase_sku pursku on pursku.id = ossku.sku_id
        left join store_technician tech on find_in_set(tech.id, orser.technician_id)
        left join order_record orre on orser.id = orre.order_serve_id
        where
        orser.order_id = #{id}
    </select>
    <select id="listCouponOrderRelevanceByOrderId" resultMap="CouponOrderRelevanceResultMap">
        select
        <include refid="couponOrderRelevanceSql"/>,
        <include refid="couponSql"/>
        from coupon_order_relevance cor
        left join coupon cou on cou.id = cor.coupon_id
        where
        cor.order_id = #{id} and (cor.status = 1 or cor.status = 2)
    </select>
    <select id="listTimesCardRecordByOrderId" resultMap="TimesCardRecordMap">
        select 
        <include refid="TimesCardTypeSql"/>,
        <include refid="timesCardUsedRecordSql"/>,
        <include refid="timesCardCustomerRelevanceSql"/>
        from times_card_used_record tcur
        left join times_card_type tct on tct.id = tcur.card_type_id
        left join times_card_customer_relevance tccr on tccr.id = tcur.card_relevance_customer_id
        where tcur.order_id = #{id} and (tcur.status = 1 or tcur.status = 2)
    </select>


    <select id="getListOrderManageForPage" resultMap="orderDetail">
        select
        <include refid="orderSql"/>,sm.name department_name,
        <include refid="customerSql"/>,
        <include refid="userManageSql"/>
        from order_manage ord
        left join customer cus on cus.id = ord.order_user
        left join store_manage sm on sm.id = ord.department_id
        left join store_user us on us.id = ord.open_order_user
        left join scheduled_manage schm on schm.id = ord.scheduled_id
        <!-- left join order_serve orser on ord.id = orser.order_id
        left join base_serve ser on orser.serve_id = ser.id
        left join store_technician tech on find_in_set(tech.id, orser.technician_id)
        left join order_record orre on orser.id = orre.order_serve_id -->
        where ord.status!=5
        <if test="id != null">
            and ord.id = #{id}
        </if>
        <if test="orderUser != null">
            and ord.order_user = #{orderUser}
        </if>
        <if test="storeScheduleUsername != null and storeScheduleUsername != ''">
            and (ord.store_schedule_username like '%${storeScheduleUsername}%' or cus.nickname like '%${storeScheduleUsername}%' or cus.real_name like '%${storeScheduleUsername}%')
        </if>
        <if test="telephone != null and telephone != ''">
            and (ord.telephone like '%${telephone}%' or cus.phone like '%${telephone}%')
        </if>
        <if test="status != null">
         <if test="status.equals(7)||status.equals(9)||status.equals(10)"><!-- 用户取消/系统取消/客服取消,全部查回 -->
          and (ord.status = 7 or ord.status = 9 or ord.status = 10)
         </if>
         <if test="!status.equals(7) and !status.equals(9) and !status.equals(10)">
         and ord.status = #{status}
         </if>
        </if>
        <if test="departmentId != null">
            and ord.department_id = #{departmentId}
        </if>
        <!-- 订单排序 1:正在服务 2:待付款#  3:未评价# 4:已完成#5: 已删除#6:已预约待接单 7用户取消 8.待确认支付9.系统取消订单-->
        <if test="status == null"><!-- 全部订单排序 -->
        order by ord.status= 8 desc,ord.status=2 desc,ord.status=1 desc,ord.status=6 desc, schm.arrive_time desc
        </if>
        <if test="status != null">
        <if test="status.equals(1)"><!-- 正在服务订单排序 -->
        order by ord.update_time desc
        </if>
        <if test="status.equals(2)"><!-- 待付款订单排序 -->
        order by ord.launch_time desc
        </if>
        <if test="status.equals(3)"><!-- 未评价订单排序 -->
        order by ord.finish_time desc
        </if>
        <if test="status.equals(4)"><!-- 已完成订单排序 -->
        order by ord.finish_time desc
        </if>
        <if test="status.equals(6)"><!-- 已预约待接单订单排序 -->
        order by schm.arrive_time desc
        </if>
        <if test="status.equals(7)"><!-- 用户取消订单排序 -->
        order by schm.arrive_time desc
        </if>
        <if test="status.equals(8)"><!-- 待确认支付订单排序 -->
        order by ord.launch_time desc
        </if>
        <if test="status.equals(9)"><!-- 系统取消订单订单排序 -->
        order by schm.arrive_time desc
        </if>
        <if test="status.equals(10)"><!-- 客服取消订单排序 -->
        order by schm.arrive_time desc
        </if>        
        </if>

    </select>
    <select id="getListOrderPhotoForPage" resultMap="orderDetail">
        select
        <include refid="orderSql"/>,sm.name department_name,
        <include refid="customerSql"/>,
        <include refid="userManageSql"/>
        from order_manage ord
        left join customer cus on cus.id = ord.order_user
        left join store_manage sm on sm.id = ord.department_id
        left join store_user us on us.id = ord.open_order_user
        left join order_serve orser on ord.id = orser.order_id
        <!-- left join base_serve ser on orser.serve_id = ser.id
        left join store_technician tech on find_in_set(tech.id, orser.technician_id) -->
        left join order_record orre on orser.id = orre.order_serve_id
        where ord.status!=5 and orre.picture_path is not null
        <if test="orderUser != null">
            and ord.order_user = #{orderUser}
        </if>
        <if test="storeScheduleUsername != null and storeScheduleUsername != ''">
            and (ord.store_schedule_username like '%${storeScheduleUsername}%' or cus.nickname like '%${storeScheduleUsername}%' or cus.real_name like '%${storeScheduleUsername}%')
        </if>
        <if test="telephone != null and telephone != ''">
            and (ord.telephone like '%${telephone}%' or cus.phone like '%${telephone}%')
        </if>
        <if test="status != null">
            and ord.status = #{status}
        </if>
        <if test="departmentId != null">
            and ord.department_id = #{departmentId}
        </if>
        order by ord.status=2 desc, ord.create_time desc
    </select>
    <select id="countTechnicianServing" resultType="java.util.Map">
select orser.technician_id technician_id,count(ord.id) serving_count
        from order_manage ord
        left join order_serve orser on orser.order_id = ord.id
        where ord.status=1
				GROUP BY orser.technician_id
    </select>

    <select id="listOrderManageForPage" resultMap="orderDetail">
        select
        <include refid="orderSql"/>,
        <include refid="customerSql"/>,
        <include refid="userManageSql"/>,sm.name department_name
        from order_manage ord
        left join customer cus on cus.id = ord.order_user
        left join store_manage sm on sm.id = ord.department_id
        left join store_user us on us.id = ord.open_order_user
        where ord.status!=5
        <if test="id != null">
            and ord.id = #{id}
        </if>
        <if test="orderUser != null">
            and ord.order_user = #{orderUser}
        </if>
        <if test="storeScheduleUsername != null and storeScheduleUsername != ''">
            and (ord.store_schedule_username like '%${storeScheduleUsername}%' or cus.nickname like '%${storeScheduleUsername}%' or cus.real_name like '%${storeScheduleUsername}%')
        </if>
        <if test="telephone != null and telephone != ''">
            and (ord.telephone like '%${telephone}%' or cus.phone like '%${telephone}%')
        </if>
        <if test="status != null">
            and ord.status = #{status}
        </if>
        <if test="departmentId != null">
            and ord.department_id = #{departmentId}
        </if>
        <if test="exportTime != null and exportTime != ''">
            and date_format(ord.create_time,'%Y-%m') = #{exportTime}
        </if>
        <if test="reminder != null and reminder != ''">
            AND (ord. STATUS = 3 OR ord. STATUS = 4)
            AND ord.id IN (
            SELECT DISTINCT
            order_id
            FROM
            order_serve os2
            LEFT JOIN base_serve bs2 ON os2.serve_id = bs2.id
            WHERE
            os2.serve_id != 104
            AND date_format(os2.start_time, '%Y-%m-%d') = date_format(
            date_sub(now(), INTERVAL 7 DAY),
            '%Y-%m-%d'
            )
            AND bs2.type = '美睫'
            )
        </if>
        <if test="dataInfo != null and dataInfo != ''">
            and (ord.data_integrity = 0 or ord.data_integrity is null)
            and date_format(ord.create_time, '%Y-%m-%d') > '2019-05-26'
            and ord.id in (
            select DISTINCT order_id from order_serve os left join order_record or1 on os.id = or1.order_serve_id where (or1.is_guest_photo = 0 or or1.is_guest_photo is null)
            )
        </if>
        order by create_time desc
    </select>

    <select id="listOrderManageForExport" resultMap="orderDetail">
        select
        <include refid="orderSql"/>,
        <include refid="customerSql"/>,sm.name department_name, stur.name us_name
        from order_manage ord
        left join customer cus on cus.id = ord.order_user or cus.phone = ord.telephone
        left join store_manage sm on sm.id = ord.department_id
        left join store_user stur on ord.open_order_user = stur.id
        where ord.status!="5"
        <if test="orderUser != null">
            and ord.order_user = #{orderUser}
        </if>
        <if test="telephone != null and telephone != ''">
            and ord.telephone like '%${telephone}%'
        </if>
        <if test="status != null">
            and ord.status = #{status}
        </if>
        <if test="departmentId != null">
            and ord.department_id = #{departmentId}
        </if>
        <if test="exportTime != null and exportTime != ''">
            and date_format(ord.create_time,'%Y-%m') = #{exportTime}
        </if>
        order by ord.create_time desc
    </select>

    <select id="getOrderSummary" resultType="java.util.Map">
        select count(1) as sumNumber, sum(total_price + change_price - discount_price) as totelPrice from order_manage
         where 1 = 1
             and status in(3, 4)
         <if test="departmentId != null">
             and department_id = #{departmentId}
         </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
            and id in (select order_id from order_serve where date_format(start_time, '%Y-%m-%d') &gt;= #{startTime} and date_format(start_time, '%Y-%m-%d') &lt;= #{endTime})
        </if>
    </select>

    <select id="getReceivable" resultType="java.lang.Integer">
        select count(1) from order_manage
        where
        status = 2
        <if test="departmentId != null">
            and department_id = #{departmentId}
        </if>
        <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
            and id in (select order_id from order_serve where date_format(start_time, '%Y-%m-%d') &gt;= #{startTime} and date_format(start_time, '%Y-%m-%d') &lt;= #{endTime})
        </if>
    </select>

    <select id="getOrderData" resultType="java.lang.Integer">
           select count(1) from order_manage om
             where (om.data_integrity = 0 or om.data_integrity is null)
             and date_format(om.create_time, '%Y-%m-%d') > '2019-05-26'
             and department_id = #{id}
             and om.id in (
            select DISTINCT order_id from order_serve os left join order_record or1 on os.id = or1.order_serve_id where (or1.is_guest_photo = 0 or or1.is_guest_photo is null)
             )
    </select>

    <select id="getOrderReminder" resultType="java.lang.Integer">
        SELECT
            count(1)
        FROM
            order_manage om2
        WHERE
            om2.department_id = #{departmentId}
        AND (om2. STATUS = 3 OR om2. STATUS = 4)
        AND om2.id IN (
            SELECT DISTINCT
                order_id
            FROM
                order_serve os2
            LEFT JOIN base_serve bs2 ON os2.serve_id = bs2.id
            WHERE
                os2.serve_id != 104
            AND date_format(os2.start_time, '%Y-%m-%d') = date_format(
                date_sub(now(), INTERVAL 7 DAY),
                '%Y-%m-%d'
            )
            AND bs2.type = '美睫'
        )
    </select>
    
    <select id="getOrderWithRecord" resultMap="orderDetail">
        select
        <include refid="orderSql"/>,
        <include refid="orderRecordSql"/>
        from order_manage ord
        left join order_serve orser on orser.order_id = ord.id
        left join order_record orre on orre.order_serve_id = orser.id
        where
        ord.id = #{id}
    </select>

    <select id="getOrderForDetail" resultMap="orderDetail">
        select
        <include refid="orderSql"/>,sm.name department_name,
        <include refid="customerSql"/>,
        <include refid="userManageSql"/>,
        <include refid="orderServeSql"/>,
        <include refid="serveSql"/>,
        <include refid="technicianSql"/>,
        <include refid="orderRecordSql"/>,
        <include refid="couponOrderRelevanceSql"/>,
        <include refid="couponSql"/>
        from order_manage ord
        left join customer cus on cus.id = ord.order_user
        left join store_manage sm on sm.id = ord.department_id
        left join store_user us on us.id = ord.open_order_user
        left join order_serve orser on ord.id = orser.order_id
        left join base_serve ser on orser.serve_id = ser.id
        left join store_technician tech on find_in_set(tech.id, orser.technician_id)
        left join order_record orre on orser.id = orre.order_serve_id
        left join coupon_order_relevance cor on cor.order_id = ord.id and (cor.status = 1 or cor.status = 2)
        left join coupon cou on cou.id = cor.coupon_id
        where ord.id = #{id} 
<!--        select
        <include refid="orderSql"/>,scm.scheduled_time, scm.arrive_time,
        cus.id cus_id, cus.openid openid, cus.phone cus_phone, cus.nickname cus_nickname, cus.real_name cus_real_name, cus.store_record_real_name cus_store_record_real_name, sm.name as department_name,
        us.id us_id, us.name us_name, us.no us_no, us.department_id us_department_id, us.jobs us_jobs, us.create_time us_create_time, us.mobile us_mobile, coup.discount_amount coupon_relevance_price
        from
        order_manage ord
        left join customer cus on cus.id = ord.order_user or cus.phone = ord.telephone
        left join store_manage sm on ord.department_id = sm.id
        left join coupon_customer_relevance ccr on ord.coupon_relevance_id = ccr.id
        left join coupon coup on coup.id = ccr.coupon_id
        left join store_user us on us.id = ord.open_order_user
        left join scheduled_manage scm on scm.id = ord.scheduled_id
        where --> 
        
    </select>
    <select id="getOrderForOrderNo" resultMap="orderDetail">
        select
        <include refid="orderSql"/>,
        <include refid="customerSql"/>,
        <include refid="userManageSql"/>,
        scm.scheduled_time, scm.arrive_time,
        coup.discount_amount coupon_relevance_price,
        sm.name as department_name
        from
        order_manage ord
        left join customer cus on cus.id = ord.order_user or cus.phone = ord.telephone
        left join store_manage sm on ord.department_id = sm.id
        left join coupon_customer_relevance ccr on ord.coupon_relevance_id = ccr.id
        left join coupon coup on coup.id = ccr.coupon_id
        left join store_user us on us.id = ord.open_order_user
        left join scheduled_manage scm on scm.id = ord.scheduled_id
        where
        ord.order_no = #{orderNo}
    </select>

    <select id="checkOrderNo" resultType="com.gogirl.gogirl_order.order_commons.dto.OrderManage">
        select
        <include refid="baseSql"/>
        from
        order_manage om
        where order_no = #{orderNo}
    </select>
    <select id="countSumPay" resultType="java.lang.Double">
        select IFNULL(sum(om.total_price),0)+IFNULL(sum(om.change_price),0)-IFNULL(sum(om.discount_price),0)
        from
        order_manage om
        where om.order_user = #{customerId} and `status` in (3,4) 
        <if test ="departmentId!=null">
          and department_id = #{departmentId}
        </if>
    </select>
   
    <update id="deleteOrderManageById">
        update order_manage set
        <if test="delRemark != null">
            del_remark = #{delRemark},
        </if>
        status = 5 where id = #{id}
    </update> 
     <!-- -->
	<delete id="deleteScheduleByIdStatus5">
        delete from
        order_manage
        where
        id = #{scheduleId}
    </delete>
    <update id="updateOrderManage">
        update order_manage
        <set>
            <if test="orderNo != null">
                order_no = #{orderNo},
            </if>
            <if test="orderUser != null">
                order_user = #{orderUser},
            </if>
            <if test="storeScheduleUsername != null">
                store_schedule_username = #{storeScheduleUsername},
            </if>
            <if test="telephone != null">
                telephone = #{telephone},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="launchTime != null">
                launch_time = #{launchTime},
            </if>
            <if test="finishTime != null">
                finish_time = #{finishTime},
            </if>
            <if test="totalPrice != null">
                total_price = #{totalPrice},
            </if>
            <if test="changePrice != null">
                change_price = #{changePrice},
            </if>
            <if test="discountPrice != null">
                discount_price = #{discountPrice},
            </if>
            <if test="couponRelevanceId != null">
                coupon_relevance_id = #{couponRelevanceId},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="message != null and message != ''">
                message = #{message},
            </if>
            <if test="paymentType != null">
                payment_type = #{paymentType},
            </if>
            <if test="multiplePaymentType != null and multiplePaymentType != ''">
                multiple_payment_type = #{multiplePaymentType},
            </if>
            <if test="createUser != null and createUser != ''">
                create_user = #{createUser},
            </if>
            <if test="orderType != null">
                order_type = #{orderType}
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateOrderDataIntegrity">
        update order_manage
        set data_integrity = #{dataIntegrity}
        where id = #{id}
    </update>

    <insert id="insertRechargeOrder" parameterType="com.gogirl.gogirl_order.order_commons.dto.OrderManage" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into order_manage
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="orderNo != null and orderNo != '' ">
                order_no,
            </if>
            <if test="orderUser != null">
                order_user,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="finishTime != null">
                finish_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remark != null and remark != ''">
                remark,
            </if>
            <if test="createUser != null and createUser != ''">
                create_user,
            </if>
            <if test="totalPrice != null">
                total_price,
            </if>
            <if test="changePrice != null">
                change_price,
            </if>
            <if test="discountPrice != null ">
                discount_price,
            </if>
            <if test="orderType != null">
                order_type
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="orderNo != null and orderNo != '' ">
                #{orderNo},
            </if>
            <if test="orderUser != null">
                #{orderUser},
            </if>
            <if test="departmentId != null">
                #{departmentId},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="finishTime != null">
                #{finishTime},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="remark != null and remark != ''">
                #{remark},
            </if>
            <if test="createUser != null and createUser != ''">
                #{createUser},
            </if>
            <if test="totalPrice != null">
                #{totalPrice},
            </if>
            <if test="changePrice != null">
                #{changePrice},
            </if>
            <if test="discountPrice != null ">
                #{discountPrice},
            </if>
            <if test="orderType != null">
                #{orderType}
            </if>
        </trim>
    </insert>

    <insert id="insertOrderOrderManageByUser" parameterType="com.gogirl.gogirl_order.order_commons.dto.OrderManage" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into order_manage
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="orderNo != null ">
                order_no,
            </if>
            <if test="orderUser != null">
                order_user,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="finishTime != null">
                finish_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remark != null and remark != ''">
                remark,
            </if>
            <if test="createUser != null and createUser != ''">
                create_user,
            </if>
            <if test="totalPrice != null">
                total_price,
            </if>
            <if test="changePrice != null">
                change_price,
            </if>
            <if test="discountPrice != null ">
                discount_price,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="openOrderUser != null">
                open_order_user,
            </if>
            <if test="orderType != null">
                order_type
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="orderNo != null and orderNo != '' ">
                #{orderNo},
            </if>
            <if test="orderUser != null">
                #{orderUser},
            </if>
            <if test="departmentId != null">
                #{departmentId},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="finishTime != null">
                #{finishTime},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="remark != null and remark != ''">
                #{remark},
            </if>
            <if test="createUser != null and createUser != ''">
                #{createUser},
            </if>
            <if test="totalPrice != null">
                #{totalPrice},
            </if>
            <if test="changePrice != null">
                #{changePrice},
            </if>
            <if test="discountPrice != null ">
                #{discountPrice},
            </if>
            <if test="telephone != null ">
                #{telephone},
            </if>
            <if test="openOrderUser != null">
                #{openOrderUser},
            </if>
            <if test="orderType != null">
                #{orderType}
            </if>
        </trim>
    </insert>

    <insert id="insertOrderManage" parameterType="com.gogirl.gogirl_order.order_commons.dto.OrderManage" useGeneratedKeys="true" keyColumn="id" keyProperty="orderManage.id">
        insert into order_manage
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="orderManage.orderNo != null and orderManage.orderNo != '' ">
                order_no,
            </if>
            <if test="orderManage.createTime != null">
                create_time,
            </if>
            <if test="orderManage.status != null">
                status,
            </if>
            <if test="orderManage.remark != null and orderManage.remark != ''">
                remark,
            </if>
            <if test="orderManage.createUser != null and orderManage.createUser != ''">
                create_user,
            </if>
            <if test="orderManage.totalPrice != null">
                total_price,
            </if>
            <if test="orderManage.changePrice != null">
                change_price,
            </if>
            <if test="orderManage.discountPrice != null">
                discount_price,
            </if>
            <if test="orderManage.orderType != null">
                order_type,
            </if>
            <if test="openOrderUser != null">
                open_order_user,
            </if>
            scheduled_id,
            order_user, department_id, telephone, store_schedule_username
        </trim>
        select
        <trim suffixOverrides="," >
            <if test="orderManage.orderNo != null and orderManage.orderNo != '' ">
                #{orderManage.orderNo},
            </if>
            <if test="orderManage.createTime != null">
                #{orderManage.createTime},
            </if>
            <if test="orderManage.status != null">
                #{orderManage.status},
            </if>
            <if test="orderManage.remark != null and orderManage.remark != ''">
                #{orderManage.remark},
            </if>
            <if test="orderManage.createUser != null and orderManage.createUser != ''">
                #{orderManage.createUser},
            </if>
            <if test="orderManage.totalPrice != null ">
                #{orderManage.totalPrice},
            </if>
            <if test="orderManage.changePrice != null">
                #{orderManage.changePrice},
            </if>
            <if test="orderManage.discountPrice != null">
                #{orderManage.discountPrice},
            </if>
            <if test="orderManage.orderType != null">
                #{orderManage.orderType},
            </if>
            <if test="openOrderUser != null">
                #{openOrderUser},
            </if>
            #{schId},
            scheduled_user, department_id, telephone, store_schedule_username
        </trim>
        from scheduled_manage where id = #{schId}
    </insert>
    <update id="updateOrderStatusByScheduleId">
        update order_manage set
        <if test="delRemark != null">
            del_remark = #{delRemark},
        </if>
        <if test="status != null">
            status = #{status}
        </if>
        where scheduled_id = #{scheduledId}
    </update> 
    <select id="getMaxOrderNo"  resultMap="orderDetail">
        select
        <include refid="orderSql"/>
        from order_manage ord order by id desc limit 1;
    </select>
    <select id="getListOrderManageForCancle" resultMap="orderDetail">
        select
        <include refid="orderSql"/>,sm.name department_name,
        <include refid="customerSql"/>,
        <include refid="userManageSql"/>
        <!-- <include refid="orderServeSql"/>,
        <include refid="serveSql"/>,
        <include refid="technicianSql"/> -->
        from order_manage ord
        left join customer cus on cus.id = ord.order_user
        left join store_manage sm on sm.id = ord.department_id
        left join store_user us on us.id = ord.open_order_user
        left join order_serve orser on ord.id = orser.order_id
        <!-- left join base_serve ser on orser.serve_id = ser.id
        left join store_technician tech on find_in_set(tech.id, orser.technician_id) -->
        where ord.status=6 and #{endDate}>DATE_FORMAT(orser.scheduled_time,"%Y-%m-%d %H:%i:%s")
        <if test="startDate != null">and DATE_FORMAT(orser.scheduled_time,"%Y-%m-%d %H:%i:%s")>#{startDate}</if>
    </select>   
    <select id="countOrderTimes" resultType="java.lang.Integer">
        select count(id) from order_manage where order_user = #{customerId}
    </select>   
     
</mapper>