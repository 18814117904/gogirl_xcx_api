<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gogirl.gogirl_user.dao.CustomerIntegralRecordMapper" >
  <resultMap id="BaseResultMap" type="com.gogirl.gogirl_user.entity.CustomerIntegralRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="current_integral" property="currentIntegral" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="order_amount" property="orderAmount" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="order_state" property="orderState" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, customer_id, source, type, current_integral, update_time, order_amount, order_id, 
    ip, remark, order_state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer_integral_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByOrderId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from customer_integral_record
    where order_id = #{orderId,jdbcType=VARCHAR} order by time DESC limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer_integral_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gogirl.gogirl_user.entity.CustomerIntegralRecord" >
    insert into customer_integral_record (id, customer_id, source, 
      type, current_integral, update_time, 
      order_amount, order_id, ip, 
      remark, order_state)
    values (#{id,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{source,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{currentIntegral,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{orderAmount,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{orderState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gogirl.gogirl_user.entity.CustomerIntegralRecord" >
    insert into customer_integral_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="currentIntegral != null" >
        current_integral,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="orderState != null" >
        order_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        #{source,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="currentIntegral != null" >
        #{currentIntegral,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null" >
        #{orderState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gogirl.gogirl_user.entity.CustomerIntegralRecord" >
    update customer_integral_record
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="currentIntegral != null" >
        current_integral = #{currentIntegral,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null" >
        order_state = #{orderState,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gogirl.gogirl_user.entity.CustomerIntegralRecord" >
    update customer_integral_record
    set customer_id = #{customerId,jdbcType=INTEGER},
      source = #{source,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      current_integral = #{currentIntegral,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_amount = #{orderAmount,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      order_state = #{orderState,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>