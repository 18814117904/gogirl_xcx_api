<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gogirl.gogirl_user.dao.CustomerBalanceRecordMapper" >
  <resultMap id="BaseResultMap" type="com.gogirl.gogirl_user.entity.CustomerBalanceRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="current_balance" property="currentBalance" jdbcType="INTEGER" />
    <result column="order_amount" property="orderAmount" jdbcType="INTEGER" />
    <result column="discount" property="discount" jdbcType="DOUBLE" />
    <result column="bestow_amount" property="bestowAmount" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="order_state" property="orderState" jdbcType="INTEGER" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="referee_id" property="refereeId" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
	 <association property="referee" javaType="com.gogirl.gogirl_store.store_commons.dto.UserManage">
    <id column="rid" property="id" jdbcType="INTEGER" />
    <result column="no" property="no" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="rdepartment_id" property="departmentId" jdbcType="INTEGER" />
    <result column="jobs" property="jobs" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="user_authority" property="userAuthority" jdbcType="VARCHAR" />
	 </association>
  </resultMap>    
  
  <sql id="Base_Column_List" >
    cr.id, customer_id, source, type, time, current_balance, order_amount, discount, bestow_amount, 
    order_id, order_state, ip, cr.remark,referee_id,department_id,store_manage.name as department_name
  </sql>

  <select id="listPartPay" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer_balance_record cr
    left join store_manage on store_manage.id = department_id
    where order_id = #{orderId}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer_balance_record cr
    left join store_manage on store_manage.id = department_id
    where cr.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByOrderId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from customer_balance_record cr
    left join store_manage on store_manage.id = department_id
    where order_id = #{orderId,jdbcType=VARCHAR} order by time DESC limit 1
  </select>
  <select id="selectByCustomerId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer_balance_record cr
    left join store_manage on store_manage.id = department_id
    where customer_id = #{customerId,jdbcType=INTEGER} order by time DESC
  </select>
  <select id="getBalanceRecord" resultMap="BaseResultMap" parameterType="com.gogirl.gogirl_user.entity.CustomerBalanceRecord" >
    select 
    <include refid="Base_Column_List" />
    from customer_balance_record cr 
    left join store_manage on store_manage.id = department_id
    <where >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER}
      </if>
      <if test="source != null" >
        and source = #{source,jdbcType=INTEGER}
      </if>
      <if test="type != null" >
        and type = #{type,jdbcType=INTEGER}
      </if>
      <if test="time != null" >
        and time = #{time,jdbcType=TIMESTAMP}
      </if>
      <if test="currentBalance != null" >
        and current_balance = #{currentBalance,jdbcType=INTEGER}
      </if>
      <if test="orderAmount != null" >
        and order_amount = #{orderAmount,jdbcType=INTEGER}
      </if>
      <if test="discount != null" >
        and discount = #{discount,jdbcType=DOUBLE}
      </if>
      <if test="bestowAmount != null" >
        and bestow_amount = #{bestowAmount,jdbcType=INTEGER}
      </if>
      <if test="orderId != null" >
        and order_id = #{orderId,jdbcType=VARCHAR}
      </if>
      <if test="orderState != null" >
        and order_state = #{orderState,jdbcType=INTEGER}
      </if>
      <if test="ip != null" >
        and ip = #{ip,jdbcType=VARCHAR}
      </if>
      <if test="refereeId != null" >
        and referee_id = #{refereeId,jdbcType=INTEGER}
      </if>
    </where>
    order by time DESC
  </select>
  <select id="getBalanceRecordCard" resultMap="BaseResultMap" parameterType="com.gogirl.gogirl_user.entity.CustomerBalanceRecord" >
    select 
    <include refid="Base_Column_List" />
    from customer_balance_record cr
    left join store_manage on store_manage.id = department_id
    <where >
      <!--(source = 2 or source = 4)所有支付方式  -->
      <if test="customerId != null" >
        and customer_id = #{customerId,jdbcType=INTEGER}
      </if>
      <if test="type != null" >
        and type = #{type,jdbcType=INTEGER}
      </if>
      <if test="time != null" >
        and time = #{time,jdbcType=TIMESTAMP}
      </if>
      <if test="currentBalance != null" >
        and current_balance = #{currentBalance,jdbcType=INTEGER}
      </if>
      <if test="orderAmount != null" >
        and order_amount = #{orderAmount,jdbcType=INTEGER}
      </if>
      <if test="discount != null" >
        and discount = #{discount,jdbcType=DOUBLE}
      </if>
      <if test="bestowAmount != null" >
        and bestow_amount = #{bestowAmount,jdbcType=INTEGER}
      </if>
      <if test="orderId != null" >
        and order_id = #{orderId,jdbcType=VARCHAR}
      </if>
      <if test="orderState != null" >
        and order_state = #{orderState,jdbcType=INTEGER}
      </if>
      <if test="ip != null" >
        and ip = #{ip,jdbcType=VARCHAR}
      </if>
      <if test="refereeId != null" >
        and referee_id = #{refereeId,jdbcType=INTEGER}
      </if>
    </where>
    order by time DESC
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer_balance_record
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="com.gogirl.gogirl_user.entity.CustomerBalanceRecord" >
    insert into customer_balance_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="currentBalance != null" >
        current_balance,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="bestowAmount != null" >
        bestow_amount,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderState != null" >
        order_state,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="refereeId != null" >
        referee_id,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        #{source,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="currentBalance != null" >
        #{currentBalance,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DOUBLE},
      </if>
      <if test="bestowAmount != null" >
        #{bestowAmount,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null" >
        #{orderState,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="refereeId != null" >
        #{refereeId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      
    </trim>
 <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
  SELECT @@IDENTITY AS id
 </selectKey>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gogirl.gogirl_user.entity.CustomerBalanceRecord" >
    update customer_balance_record
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="currentBalance != null" >
        current_balance = #{currentBalance,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DOUBLE},
      </if>
      <if test="bestowAmount != null" >
        bestow_amount = #{bestowAmount,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null" >
        order_state = #{orderState,jdbcType=INTEGER},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="refereeId != null" >
        referee_id = #{refereeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gogirl.gogirl_user.entity.CustomerBalanceRecord" >
    update customer_balance_record
    set customer_id = #{customerId,jdbcType=INTEGER},
      source = #{source,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      current_balance = #{currentBalance,jdbcType=INTEGER},
      order_amount = #{orderAmount,jdbcType=INTEGER},
      discount = #{discount,jdbcType=DOUBLE},
      bestow_amount = #{bestowAmount,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR},
      order_state = #{orderState,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getXcxChargeRecord" resultMap="BaseResultMap" parameterType="java.lang.String" >
  select cbr.id,
  group_concat(os.technician_id) referee_id
  ,(select om.department_id from order_manage om where  om.order_user = cbr.customer_id and date_format(om.create_time,'%Y-%m-%d') = #{day} limit 1) department_id 
  from customer_balance_record cbr
  left join order_manage om on om.order_user = cbr.customer_id and date_format(om.create_time,'%Y-%m-%d') = #{day}
  left join order_serve os on os.order_id = om.id
  where date_format(cbr.time,'%Y-%m-%d') = #{day} and (cbr.type=1 or cbr.type=2)
GROUP BY cbr.id
  </select>
</mapper>