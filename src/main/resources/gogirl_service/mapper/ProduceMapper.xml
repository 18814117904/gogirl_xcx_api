<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gogirl.gogirl_service.dao.produce.ProduceMapper">
    <resultMap id="produceResultMap" type="com.gogirl.gogirl_service.entity.Produce">
        <result column="produce_id" property="id"/>
        <result column="produce_name" property="name"/>
        <result column="produce_picture_path" property="picturePath"/>
        <result column="produce_type" property="type"/>
        <result column="produce_label" property="label"/>
        <result column="produce_shop_sort" property="shopSort"/>
        <result column="reqduce_grade" property="reqGrade"/>
        <result column="produce_status" property="status"/>
        <result column="produce_remark" property="remark"/>
        <result column="produce_praise_sum" property="praiseSum"/>
        <result column="produce_current_price" property="currentPrice"/>
        <result column="produce_bargain_price" property="bargainPrice"/>
        <result column="produce_service_duration" property="serviceDuration"/>
        <result column="produce_brief_introduction" property="briefIntroduction"/>
        <result column="produce_details" property="details"/>
        <result column="produce_sub_title" property="subTitle"/>
        <association property="praiseRecord" javaType="com.gogirl.gogirl_service.entity.PraiseRecord">
		    <result column="praiseid" property="id" jdbcType="INTEGER" />
		    <result column="praisecustomer_id" property="customerId" jdbcType="INTEGER" />
		    <result column="praiseserve_id" property="serveId" jdbcType="INTEGER" />
		    <result column="praisetime" property="time" jdbcType="TIMESTAMP" />
        </association>
        <association property="serve" javaType="com.gogirl.gogirl_service.entity.Serve">
	        <result column="id" property="id" />
	        <result column="name" property="name"/>
	        <result column="type" property="type"/>
	        <result column="type_id" property="typeId"/>
	        <result column="label" property="label"/>
	        <result column="shop_sort" property="shopSort"/>
	        <result column="price" property="price"/>
	        <result column="picture_path" property="picturePath"/>
	        <result column="status" property="status"/>
	        <result column="remark" property="remark"/>
	        <result column="details" property="details"/>
	        <result column="service_duration" property="serviceDuration"/>
	        <result column="has_index_show" property="hasIndexShow"/>
	        <result column="index_sort" property="indexSort"/>
	        <result column="praise_sum" property="praiseSum"/>
	        <result column="brief_introduction" property="briefIntroduction"/>
	        <result column="sch_type_id" property="schTypeId"/>
        </association>
    </resultMap>

    <sql id="serveSql">
        ser.id, ser.name,ser.type,ser.type_id, ser.label, ser.shop_sort, ser.price, ser.picture_path, ser.status, ser.remark, ser.details, 
        ser.service_duration, ser.has_index_show, ser.index_sort, ser.praise_sum,ser.brief_introduction,ser.sch_type_id
    </sql>
    <sql id="praiseSql">
     praise.id praiseid,praise.customer_id praisecustomer_id,praise.serve_id praiseserve_id,praise.time praisetime
    </sql>
    <sql id="proSql">
        pro.id pro_id, pro.name pro_name, pro.picture_path pro_picture_path, pro.type pro_type, pro.label pro_label, pro.shop_sort pro_shop_sort, pro.req_grade, pro.status pro_status, pro.remark pro_remark
    </sql>
    <sql id="produceSql">
        produce.id produce_id, produce.name produce_name, produce.picture_path produce_picture_path, produce.type produce_type, produce.label produce_label,
        produce.shop_sort produce_shop_sort,produce.req_grade, produce.status produce_status, produce.remark produce_remark,produce.praise_sum produce_praise_sum,
        produce.current_price produce_current_price,produce.bargain_price produce_bargain_price,produce.service_duration produce_service_duration,
        produce.brief_introduction produce_brief_introduction,produce.details produce_details,produce.sub_title produce_sub_title
    </sql>

    <sql id="baseSql">
        id, name,picture_path picturePath, type, label,shop_sort shopSort,req_grade reqGrade, status, remark, details
    </sql>

    <sql id="bpSql">
        bp.id, bp.name, bp.picture_path picturePath, bp.type, bp.label, bp.shop_sort shopSort, bp.req_grade reqQrade, bp.status, bp.remark, bp.details, bs.id serveId, bs.name serveName
    </sql>
    <select id="getProduceForDetail" resultMap="produceResultMap">
        select
        <include refid="serveSql"/>,
        <include refid="produceSql"/>
         from base_produce produce 
        left join base_serve ser on produce.service_id = ser.id
        where
        produce.id = #{id}
    </select>

    <select id="queryNewServePage" resultMap="produceResultMap">
        select
        <include refid="serveSql"/>,
        <include refid="praiseSql"/>,
        <include refid="produceSql"/>
        from base_serve ser
        left join base_produce produce on produce.service_id = ser.id
        left join praise_record praise on produce.id=praise.serve_id and praise.customer_id =#{cusId}
        where produce.has_index_show = 1 and ser.status =1 and produce.status=1
        order by produce.index_sort desc
	</select>

    <select id="listProduceForPage" resultType="com.gogirl.gogirl_service.entity.Produce">
        select
        <include refid="bpSql"/>
        from base_produce bp
        left join base_produce_serve serve on bp.id = serve.produce_id
        left join base_serve bs on serve.serve_id = bs.id
        where 1 = 1
        <if test="id != null">
            and bp.id = #{id}
        </if>
        <if test="name != null and name != ''">
            and bp.name like '%${name}%'
        </if>
        <if test="type != null and type != ''">
            and bp.type = #{type}
        </if>
        <if test="picturePath != null">
            and bp.picture_path = #{picturePath}
        </if>
        <if test="label != null">
            <foreach collection="label.split(',')" item="item" index="index">
                and bp.label like '%${item}%'
            </foreach>
        </if>
        <if test="shopSort != null">
            and bp.shop_sort = #{shopSort}
        </if>
        <if test="reqGrade != null">
            and bp.req_grade = #{reqGrade}
        </if>
        <if test="status != null and status != ''">
            and bp.status = #{status}
        </if>
        <if test="remark != null">
            and bp.remark = #{remark}
        </if>
        <choose>
            <when test="sortOrder == 2">
                order by bp.top_time desc, bp.shop_sort asc
            </when>
            <otherwise>
                order by bp.update_time desc, bp.shop_sort asc
            </otherwise>
        </choose>
    </select>

    <select id="queryProduceWithPrice" resultType="com.gogirl.gogirl_service.entity.Produce">
        select
         bp.id, bp.name, bp.picture_path, bp.type, bp.label, bp.shop_sort, bp.req_grade, bp.status, bp.remark, bp.details, bs.price, bs.id as serve_id, bs.name as serve_name, bs.service_duration
         from base_produce bp
         left join base_produce_serve serve on bp.id = serve.produce_id
         left join base_serve bs on serve.serve_id = bs.id
         where bp.status = 1 and bp.id in(serve.produce_id)
         and bs.status = 1
         order by bp.top_time desc, bp.shop_sort asc limit 18
    </select>


    <!-- 获取已经选中和其他没被选中的款式产品 -->
    <select id="listProduceNoDesignationServe" resultType="com.gogirl.gogirl_service.entity.Produce">
        select
        <include refid="baseSql"/>
        from base_produce where id not in(select produce_id from base_produce_serve where serve_id not in (#{serveId}))
    </select>

    <select id="listProduceNoDesignationAllServe" resultType="com.gogirl.gogirl_service.entity.Produce">
        select
        <include refid="baseSql"/>
        from
        base_produce
        where
        id not in(select produce_id from base_produce_serve)
    </select>

    <select id="listProduceAll" resultType="com.gogirl.gogirl_service.entity.Produce">
        select
        <include refid="baseSql"/>
        from base_produce
    </select>

    <select id="listProduceByServe" resultType="com.gogirl.gogirl_service.entity.Produce">
        select
        <include refid="baseSql"/>
        from base_produce where id in (select produce_id from base_produce_serve where serve_id = #{serveId})
        and status = 1
    </select>

    <delete id="deleteProduceServe">
        delete from base_produce_serve where produce_id = #{id}
    </delete>

    <delete id="deleteProdecu">
        delete from base_produce where id = #{id}
    </delete>

    <insert id="synrepalce">
        replace into base_serve(label)
        values
        <foreach collection ="list" item="reddemCode" index= "index" separator =",">
            ( #{reddemCode.label})
        </foreach>
    </insert>

    <insert id="insertProduceServe">
        insert into base_produce_serve
        (serve_id, produce_id)
        values(
        #{serveId}, #{id}
        )
    </insert>

    <insert id="insertProduce" useGeneratedKeys="true" parameterType="com.gogirl.gogirl_service.entity.Produce" keyColumn="id" keyProperty="id">
        insert into base_produce
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="name != null">
                name,
            </if>
            <if test="picturePath != null">
                picture_path,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="label != null">
                label,
            </if>
            <if test="shopSort != null">
                shop_sort,
            </if>
            <if test="reqGrade != null">
                req_grade,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="details != null and details != ''">
                details,
            </if>
                update_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="name != null">
                #{name},
            </if>
            <if test="picturePath != null">
                #{picturePath},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="label != null">
                #{label},
            </if>
            <if test="shopSort != null">
                #{shopSort},
            </if>
            <if test="reqGrade != null">
                #{reqGrade},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="details != null and details != ''">
                #{details},
            </if>
                now()
        </trim>
    </insert>
    <select id="checkProduceServe" resultType="com.gogirl.gogirl_service.entity.ProduceServe">
        select *
        from
        base_produce_serve
        where
        produce_id = #{id}
    </select>
    <update id="updateProduceServe">
        update base_produce_serve set serve_id = #{serveId} where produce_id = #{id}
    </update>
    <update id="topProduce">
        update base_produce set top_time = now() where id = #{id}
    </update>
    <update id="updateProduceById">
        update base_produce
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="picturePath != null">
                picture_path = #{picturePath},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="label != null">
                label = #{label},
            </if>
            <if test="shopSort != null">
                shop_sort = #{shopSort},
            </if>
            <if test="reqGrade != null">
                req_grade = #{reqGrade},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="details != null">
                details = #{details},
            </if>
            <if test="praiseSum != null">
                praise_sum = #{praiseSum},
            </if>
            
                update_time = now()
        </set>
        where
        id = #{id}
    </update>
</mapper>