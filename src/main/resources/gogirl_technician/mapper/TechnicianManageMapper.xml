<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gogirl.gogirl_technician.technician_user.dao.TechnicianManageMapper">
    <resultMap id="resultTechnician" type="com.gogirl.gogirl_technician.technician_commons.dto.TechnicianManage">
        <result property="id" column="id"/>
        <result property="openid" column="openid"/>
        <result property="picturePath" column="picture_path"/>
        <result property="technicianNo" column="technician_no"/>
        <result property="name" column="name"/>
        <result property="departmentId" column="department_id"/>
        <result property="departmentName" column="department_name"/>
        <result property="createTime" column="create_time"/>
        <result property="mobile" column="mobile"/>
        <result property="userAuthority" column="user_authority"/>
        <result property="grade" column="grade"/>
        <result property="status" column="status"/>
        <result property="score" column="score"/>
        <result property="userId" column="user_id"/>
        <association property="classesTechnician" javaType="com.gogirl.gogirl_store.store_commons.dto.ClassesTechnician">
            <result property="id" column="ct_id"/>
            <result property="userId" column="ct_user_id"/>
            <result property="days" column="ct_days"/>
            <result property="classes" column="ct_classes"/>
            <result property="status" column="ct_status"/>
            <association property="classesManage" javaType="com.gogirl.gogirl_store.store_commons.dto.ClassesManage">
                <result property="id" column="cls_id"/>
                <result property="name" column="cls_name"/>
                <result property="startTime" column="cls_start_time"/>
                <result property="endTime" column="cls_end_time"/>
                <result property="useNumber" column="cls_use_number"/>
                <result property="departmentId" column="cls_department_id"/>
            </association>
            <association property="technicianManage" javaType="com.gogirl.gogirl_technician.technician_commons.dto.TechnicianManage">
                <result property="id" column="tech_id"/>
                <result property="name" column="tech_name"/>
                <result property="departmentId" column="tech_department_id"/>
            </association>
        </association>
        <collection property="listScheduleServer" ofType="com.gogirl.gogirl_store.store_commons.dto.ScheduleServe">
            <result column="ss_start_time" property="startTime"/>
            <result column="ss_end_time" property="endTime"/>
        </collection>
    </resultMap>
    <sql id="baseSql">
        id,openid, name, department_id departmentId, create_time createTime, mobile, user_authority userAuthority, grade, picture_path picturePath, status tech_status,score,st.user_id
    </sql>

    <sql id="technicianSql">
        tech.id id ,tech.openid openid ,tech.picture_path picture_path ,tech.technician_no technician_no ,tech.name name ,tech.department_id department_id,tech.create_time create_time ,tech.mobile mobile ,tech.user_authority user_authority ,tech.grade grade ,tech.status status ,tech.score score ,tech.user_id user_id
    </sql>

    <sql id="classestechnician">
        ct.id ct_id, ct.user_id ct_user_id, ct.days ct_days, ct.classes ct_classes, ct.status ct_status
    </sql>

    <sql id="classes">
        cls.id cla_id, cls.name cls_name, cls.start_time cls_start_time, cls.end_time cls_end_time, cls.use_number cls_use_number, cls.department_id cls_department_id
    </sql>
    
    <select id="queryDayTechnicianClasses" resultMap="resultTechnician">
        select
        <include refid="technicianSql"/>,
        <include refid="classestechnician"/>,
        <include refid="classes"/>
        from store_technician tech
        left join store_classes_technician ct on tech.id = ct.user_id and ct.days = #{day}
				left join store_classes cls on cls.id = ct.classes
         where tech.department_id = #{departmentId}
        and tech.status = 1
    </select>

    <select id="listTechnicianForPage" resultMap="resultTechnician">
        select
        <include refid="technicianSql"/>,(select sm.name from store_manage sm where sm.id = tech.department_id ) department_name
        from store_technician tech
        where 1 = 1
        <if test="id != null">
            and id = #{id}
        </if>
        <if test="name != null and name != '' ">
            and name = #{name}
        </if>
        <if test="departmentId!= null">
            and department_id = #{departmentId}
        </if>
        <if test="grade != null and grade != ''">
            and grade = #{grade}
        </if>
        <if test="createTime != null and createTime != ''">
            and create_time = #{createTime}
        </if>
        <if test="openid != null">
            and openid = #{openid}
        </if>
        <if test="mobile != null and mobile != ''">
            and mobile = #{mobile}
        </if>
    </select>

    <select id="getTechnicianManage" resultType="com.gogirl.gogirl_technician.technician_commons.dto.TechnicianManage">
        select
        <include refid="baseSql"/>
        from store_technician st
        where user_id = #{id}
    </select>
    <select id="getTechnicianManageByOpenid" resultType="com.gogirl.gogirl_technician.technician_commons.dto.TechnicianManage">
        select
        <include refid="baseSql"/>
        from store_technician st
        where openid = #{openid}
    </select>

    <select id="listClassesTechnician" resultMap="resultTechnician">
        select
        <include refid="technicianSql"/>,
        <include refid="classestechnician"/>,
        ss.start_time ss_start_time, ss.end_time ss_end_time,
        <include refid="classes"/>
        from
        store_technician tech
        left join store_classes_technician ct on ct.user_id = tech.id and ct.days = #{days}
        left join store_classes cls on cls.id = ct.classes
        left join scheduled_serve ss on ss.technician_id = tech.id and date_format(ss.start_time, '%Y-%m-%d') = #{days}  and ss.sch_id in (select id from scheduled_manage where status = 1)
        where tech.department_id = #{departmentId}
    </select>
    <select id="getTechnicianManageForDetail" resultMap="resultTechnician">
        select
        <include refid="technicianSql"/>,(select sm.name from store_manage sm where sm.id = tech.department_id ) department_name,suser.jobs jobs
        from store_technician tech
        left join store_user suser on suser.id = tech.user_id
        where
        tech.id = #{id}
    </select>

    <delete id="deleteTechnician">
        delete from store_technician where user_id = #{id}
    </delete>

    <delete id="deleteTechnicianManageById">
        delete from store_technician where id = #{id}
    </delete>

    <update id="updateTechnicianManageById">
        update store_technician
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId},
            </if>
            <if test="grade != null">
                grade = #{grade},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="userAuthority != null">
                user_authority = #{userAuthority},
            </if>
            <if test="openid != null">
                openid  = #{openid},
            </if>
            <if test="mobile != null">
                mobile  = #{mobile}
            </if>
            where id = #{id}
        </set>

    </update>

    <update id="updateTechnician">
        update store_technician
        <set>
        <if test="name != null">
            name = #{name},
        </if>
        <if test="departmentId != null">
            department_id = #{departmentId},
        </if>
        <if test="mobile != null">
            mobile  = #{mobile},
        </if>
            <if test="status != null">
                status = #{status},
            </if>
        <if test="picturePath != null and picturePath != ''">
            picture_path = #{picturePath}
        </if>
        </set>
        where user_id = #{userId}
    </update>

    <insert id="insertTechnician">
        insert into store_technician(name, department_id, user_id, picture_path, mobile, status) values(#{name}, #{departmentId}, #{userId}, #{picturePath}, #{mobile}, #{status})
    </insert>

    <insert id="insertTechnicianManage" parameterType="com.gogirl.gogirl_technician.technician_commons.dto.TechnicianManage">
        insert into store_technician
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="name != null">
                name,
            </if>
            <if test="departmentId != null">
                department_id,,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="userAuthority != null">
                user_authority
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="name != null">
                #{name},
            </if>
            <if test="departmentId != null">
                #{departmentId},
            </if>
            <if test="grade != null">
                #{grade},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="mobile != null">
                #{mobile},
            </if>
            <if test="userAuthority != null">
                #{userAuthority}
            </if>
        </trim>
    </insert>



    <select id="listTechnicianManageForAll" resultType="com.gogirl.gogirl_technician.technician_commons.dto.TechnicianManage">
        select
        <include refid="baseSql"/>
        from store_technician st where department_id = #{departmentId}
        and status = 1
    </select>

    <delete id="deleteTechnicianById">
        delete from store_technician where id = #{id}
    </delete>



</mapper>